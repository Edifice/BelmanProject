package dk.easv.belman.GUI;

//<editor-fold defaultstate="collapsed" desc=" Imports ">
import dk.easv.belman.GUI.Models.POTableModel;
import java.awt.BorderLayout;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.SortOrder;
import org.jdesktop.swingx.JXTable;
//</editor-fold>

public class FinishedProductionFrame extends javax.swing.JFrame {

    //<editor-fold defaultstate="collapsed" desc=" Global variables ">
    private MainGui parent; // The parent frame.
    private JXTable table; // The JXTable where we show the finished production orders.
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" Constructor ">
    /**
     * Creates new form CutHistoryFrame
     */
    public FinishedProductionFrame(MainGui parent) {
        this.parent = parent; // Set the parent.
        initComponents(); // Init components put in using the NetBeans designer.
        init(); // Init other components.
        this.setVisible(true); // Set the frame visible.
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Only dispose this window in case the 'Close' button is pressed.
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc=" Initialize components ">
    /**
     * Initialize components which were added/created manually.
     */
    private void init() {
        //Initialize the table and sets the model
        table = new JXTable(); // Creates an empty JXTable (from SwingX 1.6.1) for now.
        JScrollPane sf = new JScrollPane(table); // Creates a Scroll Pane where the table will be.
        table.setModel(new POTableModel(Main.allOrderData.getProductOrderList().filterIsDone())); // Create a TableModel based on a list of only finished production orders and set in to the table.
        setTableProperties(table); // Set the table properites.

        pnlTable.setLayout(new BorderLayout()); // Set the panel layout to BorderLayout.
        pnlTable.add(sf); // Add the panel with the table to it.
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc=" Table properties ">
    /**
     * Set different properties for the given table.
     *
     * @param table The table to which we set the properties.
     */
    public void setTableProperties(JXTable table) {
        table.setDragEnabled(false); // Dragging is disabled.
        table.setColumnControlVisible(true); // Column control settings are enabled.
        table.packAll(); // Packs the table.
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Only one selection is allowed per table.
        table.setSortOrderCycle(SortOrder.ASCENDING, SortOrder.DESCENDING, SortOrder.UNSORTED); // Sets the sorting order to ASC > DESC > Unsorted.
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc=" Initialize components (Auto-generated code) ">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTable = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" More variables ">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlTable;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
