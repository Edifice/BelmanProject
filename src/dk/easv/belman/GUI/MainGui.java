package dk.easv.belman.GUI;

import dk.easv.belman.BE.Item;
import dk.easv.belman.BE.ItemList;
import dk.easv.belman.BE.ProductOrder;
import dk.easv.belman.BE.SalesOrder;
import dk.easv.belman.BE.SalesOrderList;
import dk.easv.belman.BLL.Filter;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SingleSelectionModel;
import javax.swing.SortOrder;
import org.jdesktop.swingx.JXTable;
import sun.misc.ASCIICaseInsensitiveComparator;

public class MainGui extends javax.swing.JFrame {

    
    private SleeveTableModel sleeveModel;
    private Filter filter;
    private JXTable tblSleeves;
    private Item selectedItem;

    /**
     * Creates new form Belman
     */
    public MainGui() {

        initComponents();
        init();

    }

    public void scheduledUpdate(boolean showUrgentPopup) {
        if (showUrgentPopup) {
            JOptionPane.showMessageDialog(null, "There is a new Ugent order!", "Ugent order", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void init() {
        //
        filter = new Filter();
        
        //DescriptionPane
        setVisibleTo(false, lblDescriptionText1,
                lblDescriptionText2,
                lblDescriptionText3,
                lblDescriptiontext4,
                lblDescriptionText5,
                lblDescriptionText6,
                txtDescription1,
                txtDescription2,
                txtDescription3,
                txtDescription4,
                txtDescription5,
                txtDescription6);

        //Sleeve table
        tblSleeves = new JXTable();
        JXTable table = new JXTable();

        JScrollPane sp = new JScrollPane(tblSleeves);        
        
        JScrollPane sf = new JScrollPane(table);
        

        sleeveModel = new SleeveTableModel(Main.allOrderData);
        table.setModel(sleeveModel);
        table.packAll();
        tblSleeves.setModel(sleeveModel);
        tblSleeves.setColumnControlVisible(true);
        tblSleeves.packAll();
        tblSleeves.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblSleeves.setSortOrderCycle(SortOrder.ASCENDING, SortOrder.DESCENDING, SortOrder.UNSORTED);

        pnlWest.setLayout(new BorderLayout());
        pnlWest.add(sf);

        pnlCenter.setLayout(new BorderLayout());
        pnlCenter.add(sp);





        addListeners(tblSleeves);


    }

    private void addListeners(Component c) {

        c.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(final MouseEvent e) {
                selectedItem = sleeveModel.getItemByRow(tblSleeves.getSelectedRow());
                if (e.getClickCount() != 2) {
                    setItemDescriptionPane(selectedItem);
                } else {
                    //TODO
                }
            }
        });
        c.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                int keyUp = KeyEvent.VK_UP;
                int keyDown = KeyEvent.VK_DOWN;
                int keyEnter = KeyEvent.VK_ENTER;
                
                if (e.getKeyCode() == keyUp) {
                    selectedItem = sleeveModel.getItemByRow(tblSleeves.getSelectedRow() - 1);
                    setItemDescriptionPane(selectedItem);
                } else if (e.getKeyCode() == keyDown) {
                    selectedItem = sleeveModel.getItemByRow(tblSleeves.getSelectedRow() + 1);
                    setItemDescriptionPane(selectedItem);
                } else if (e.getKeyCode() == keyEnter) {
                    //TODO
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEast = new javax.swing.JSplitPane();
        jpDescription = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        lblDescriptionText1 = new javax.swing.JLabel();
        lblDescriptionText2 = new javax.swing.JLabel();
        lblDescriptionText3 = new javax.swing.JLabel();
        lblDescriptiontext4 = new javax.swing.JLabel();
        txtDescription1 = new javax.swing.JTextField();
        txtDescription2 = new javax.swing.JTextField();
        txtDescription3 = new javax.swing.JTextField();
        txtDescription4 = new javax.swing.JTextField();
        lblDescriptionText5 = new javax.swing.JLabel();
        txtDescription5 = new javax.swing.JTextField();
        lblDescriptionText6 = new javax.swing.JLabel();
        txtDescription6 = new javax.swing.JTextField();
        pnlHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        pnlWest = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 650));

        pnlEast.setDividerLocation(325);
        pnlEast.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        pnlEast.setPreferredSize(new java.awt.Dimension(300, 650));

        lblDescription.setText("Description");

        lblDescriptionText1.setText("Text");

        lblDescriptionText2.setText("Text");

        lblDescriptionText3.setText("Text");

        lblDescriptiontext4.setText("Text");

        lblDescriptionText5.setText("Text");

        lblDescriptionText6.setText("Text");

        javax.swing.GroupLayout jpDescriptionLayout = new javax.swing.GroupLayout(jpDescription);
        jpDescription.setLayout(jpDescriptionLayout);
        jpDescriptionLayout.setHorizontalGroup(
            jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptionText1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptionText2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(txtDescription2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptionText3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptiontext4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptionText5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescription)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpDescriptionLayout.createSequentialGroup()
                        .addComponent(lblDescriptionText6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription6, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpDescriptionLayout.setVerticalGroup(
            jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptionText1)
                    .addComponent(txtDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptionText2)
                    .addComponent(txtDescription2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptionText3)
                    .addComponent(txtDescription3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptiontext4)
                    .addComponent(txtDescription4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptionText5)
                    .addComponent(txtDescription5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptionText6)
                    .addComponent(txtDescription6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pnlEast.setTopComponent(jpDescription);

        pnlHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Enter ID: ");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOK))
                .addContainerGap())
        );

        pnlCenter.setPreferredSize(new java.awt.Dimension(400, 0));

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlWest.setPreferredSize(new java.awt.Dimension(400, 862));

        javax.swing.GroupLayout pnlWestLayout = new javax.swing.GroupLayout(pnlWest);
        pnlWest.setLayout(pnlWestLayout);
        pnlWestLayout.setHorizontalGroup(
            pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );
        pnlWestLayout.setVerticalGroup(
            pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 862, Short.MAX_VALUE)
        );

        jPanel1.setPreferredSize(new java.awt.Dimension(50, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlWest, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEast, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                    .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                    .addComponent(pnlWest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (txtID.getText().isEmpty()) {
            setSleeveTableModel(Main.allOrderData);
        } else {
            SalesOrderList sol = new SalesOrderList();
            boolean hasFound = false;

            while (!hasFound) {
                ItemList iList = new ItemList();
                for (SalesOrder s : sleeveModel.getSList().getList()) {
                    if (s.getDescription().contains(txtID.getText()) || String.valueOf(s.getId()).contains(txtID.getText())) {
                        if (!sol.hasId(s.getId())) {
                            sol.add(s);
                        }

                        hasFound = true;
                    }
                    for (ProductOrder p : s.getProductOrderList().getList()) {
                        if (p.getDescription().contains(txtID.getText()) || String.valueOf(p.getId()).contains(txtID.getText())) {
                            if (!sol.hasId(s.getId())) {
                                sol.add(s);
                            }

                            hasFound = true;

                        }
                    }
                }
                if (!hasFound) {
                    JOptionPane.showMessageDialog(this, "Nothing was found from your query", "Nothing found", JOptionPane.ERROR_MESSAGE);
                }
                break;
            }
            if (hasFound) {
                setSleeveTableModel(sol);
            }
        }
    }//GEN-LAST:event_btnOKActionPerformed
    private void setSleeveTableModel(SalesOrderList sol) {
        sleeveModel.setItemList(sol);
        sleeveModel.fireTableDataChanged();
    }

    public void setItemDescriptionPane(Item item) {
        setVisibleTo(true, lblDescriptionText1,
                lblDescriptionText2,
                lblDescriptionText3,
                txtDescription1,
                txtDescription2,
                txtDescription3);

        lblDescriptionText1.setText("SO ID / Description: ");
        txtDescription1.setText(item.getSalesOrderId() + " / " + Main.allOrderData.getById(item.getSalesOrderId()).getDescription());
        lblDescriptionText2.setText("PO ID / Description: ");
        txtDescription2.setText(item.getProductOrderId() + " / " + Main.allOrderData.getById(item.getSalesOrderId()).getProductOrderList().getById(item.getProductOrderId()).getDescription());

        setEditableTo(false, txtDescription1,
                txtDescription2,
                txtDescription3,
                txtDescription4,
                txtDescription5,
                txtDescription6);


        setVisibleTo(true, lblDescriptiontext4,
                txtDescription4,
                lblDescriptionText5,
                txtDescription5,
                lblDescriptionText6,
                txtDescription6);

        lblDescriptionText3.setText("Material ID: ");
        txtDescription3.setText(String.valueOf(item.getMaterialId()));
        lblDescriptiontext4.setText("Width: ");
        txtDescription4.setText(String.valueOf(item.getWidth()));
        lblDescriptionText5.setText("Circumference: ");
        txtDescription5.setText(String.valueOf(item.getCircumference()));
        lblDescriptionText6.setText("Thickness: ");
        txtDescription6.setText(String.valueOf(item.getThickness()));


    }

    /**
     * Takes in multiple Components and sets the visibility option for all.
     *
     * @param visibility
     * @param comp All the components
     */
    public void setVisibleTo(boolean visibility, Component... comp) {
        for (Component c : comp) {
            c.setVisible(visibility);
        }
    }

    /**
     * Takes in multiple JTextFields and sets the editable attribute for all.
     *
     * @param visibility
     * @param comp
     */
    public void setEditableTo(boolean visibility, JTextField... comp) {
        for (JTextField c : comp) {
            c.setEditable(visibility);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpDescription;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDescriptionText1;
    private javax.swing.JLabel lblDescriptionText2;
    private javax.swing.JLabel lblDescriptionText3;
    private javax.swing.JLabel lblDescriptionText5;
    private javax.swing.JLabel lblDescriptionText6;
    private javax.swing.JLabel lblDescriptiontext4;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JSplitPane pnlEast;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlWest;
    private javax.swing.JTextField txtDescription1;
    private javax.swing.JTextField txtDescription2;
    private javax.swing.JTextField txtDescription3;
    private javax.swing.JTextField txtDescription4;
    private javax.swing.JTextField txtDescription5;
    private javax.swing.JTextField txtDescription6;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
