package dk.easv.belman.GUI;

import dk.easv.belman.BLL.ListManager;
import dk.easv.belman.BLL.XMLWriter;
import java.awt.BorderLayout;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.SortOrder;
import org.jdesktop.swingx.JXTable;

public class HistoryFrame extends javax.swing.JFrame {

    private MainGui parent;
    private JXTable table;
    private ListManager listManager;

    /**
     * Creates new form CutHistoryFrame
     */
    public HistoryFrame(MainGui parent) {
        this.parent = parent;
        initComponents();
        init();
        this.setVisible(true);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method sets the table's model to the CutTableModel, and fire the
     * table properties method
     */
    private void setCutTable() {
        Main.allCuts = listManager.getAllCuts();
        table.setModel(new CutTableModel(Main.allCuts));
        setTableProperties(table);
    }

    /**
     * This method sets the table's model to the POTableModel, and fire the
     * table properties method
     */
    private void setPOTable() {
        table.setModel(new POTableModel(listManager.getAllDoneProductionOrders(Main.allOrderData)));
        setTableProperties(table);
    }

    private void init() {
        //Initialize BLL classes
        listManager = new ListManager();

        //Initialize the table and sets the model
        table = new JXTable(); // Creates an empty JXTable (from SwingX 1.6.1) for now.
        JScrollPane sf = new JScrollPane(table); // Creates a Scroll Pane where the table will be.
        setCutTable();// Sets the table model.
        setTableProperties(table);

        pnlTable.setLayout(new BorderLayout());
        pnlTable.add(sf);
    }

    /**
     * Set different properties for the given table.
     *
     * @param table
     */
    public void setTableProperties(JXTable table) {
        table.setDragEnabled(false); // Dragging is disabled.
        table.setColumnControlVisible(true); // Column control settings are enabled.
        table.packAll(); // Packs the table.
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Only one selection is allowed per table.
        table.setSortOrderCycle(SortOrder.ASCENDING, SortOrder.DESCENDING, SortOrder.UNSORTED); // Sets the sorting order to ASC > DESC > Unsorted.

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        pnlTable = new javax.swing.JPanel();
        btnCuts = new javax.swing.JButton();
        btnPO = new javax.swing.JButton();
        btnXMLExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        btnCuts.setText("Cuts");
        btnCuts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCutsActionPerformed(evt);
            }
        });

        btnPO.setText("Production Orders");
        btnPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOActionPerformed(evt);
            }
        });

        btnXMLExport.setText("Export to XML");
        btnXMLExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXMLExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPO, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCuts, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXMLExport, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCuts, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPO, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXMLExport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCutsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCutsActionPerformed
        setCutTable();
    }//GEN-LAST:event_btnCutsActionPerformed

    private void btnPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOActionPerformed
        setPOTable();
    }//GEN-LAST:event_btnPOActionPerformed

    private void btnXMLExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXMLExportActionPerformed
        XMLWriter xml = new XMLWriter();
        xml.write(Main.allCuts);
    }//GEN-LAST:event_btnXMLExportActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCuts;
    private javax.swing.JButton btnPO;
    private javax.swing.JButton btnXMLExport;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel pnlTable;
    // End of variables declaration//GEN-END:variables
}
